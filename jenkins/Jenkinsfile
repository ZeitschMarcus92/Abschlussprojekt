pipeline {
  agent any

  environment {
    DOCKERHUB_HOST = 'docker.io'
    DOCKERHUB_USER = 'zeitschmarcus92'
    REGISTRY       = "${DOCKERHUB_HOST}/${DOCKERHUB_USER}"

    CREDS_ID = 'registry-creds'

    KCFG_DEV  = 'kubeconfig-dev'
    KCFG_PROD = 'kubeconfig-prod'

    IMG_BE = "${REGISTRY}/app-backend"
    IMG_FE = "${REGISTRY}/app-frontend"
  }

  parameters {
    choice(name: 'TARGET', choices: ['dev','prod'], description: 'Zielumgebung')
  }

  stages {

    stage('Checkout') {
      steps { checkout scm }
    }

    stage('Build & Test') {
      steps { sh 'scripts/build.sh $TARGET' }
    }

   stage('Docker & Push') {
  steps {
    withCredentials([usernamePassword(
      credentialsId: 'registry-creds',   
      usernameVariable: 'DH_USER',
      passwordVariable: 'DH_PASS'
    )]) {
      sh '''#!/bin/bash
set -euo pipefail
bash scripts/push.sh \
  "$TARGET" \
  "docker.io" \
  "docker.io/${DH_USER}/app-backend" \
  "docker.io/${DH_USER}/app-frontend" \
  "$DH_USER" \
  "$DH_PASS"
docker logout docker.io || true
'''
    }
  }
}


    stage('Deploy') {
      steps {
        script {
          if (params.TARGET == 'dev') {
            withCredentials([file(credentialsId: env.KCFG_DEV, variable: 'K')]) {
              sh 'KUBECONFIG="$K" scripts/deploy.sh dev "${IMG_BE}:${GIT_COMMIT}" "${IMG_FE}:${GIT_COMMIT}"'
            }
            input 'Promote to PROD?'
            withCredentials([file(credentialsId: env.KCFG_PROD, variable: 'K')]) {
              sh 'KUBECONFIG="$K" scripts/deploy.sh prod "${IMG_BE}:${GIT_COMMIT}" "${IMG_FE}:${GIT_COMMIT}"'
            }
          } else {
            withCredentials([file(credentialsId: env.KCFG_PROD, variable: 'K')]) {
              sh 'KUBECONFIG="$K" scripts/deploy.sh prod "${IMG_BE}:${GIT_COMMIT}" "${IMG_FE}:${GIT_COMMIT}"'
            }
          }
        }
      }
    }
  }
}
